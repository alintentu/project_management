version: "3.9"

name: project_management

services:
  app:
    build:
      context: ./docker/app
    image: project_management/app:latest
    container_name: pm-app
    working_dir: /var/www/html
    environment:
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: "1"
    volumes:
      - ./:/var/www/html
      - composer_cache:/tmp/composer
    depends_on:
      - db
      - redis
    networks:
      - internal

  web:
    image: nginx:1.27-alpine
    container_name: pm-web
    ports:
      - "8088:80"
    volumes:
      - ./:/var/www/html
      - ./docker/web/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - internal

  node:
    image: node:20-alpine
    container_name: pm-node
    working_dir: /var/www/html
    command: sh -lc "if [ -f package.json ]; then npm install && npm run dev -- --host; else echo 'No package.json yet'; sleep 3600; fi"
    ports:
      - "5173:5173"
    volumes:
      - ./:/var/www/html
    depends_on:
      - app
    networks:
      - internal

  db:
    image: postgres:16-alpine
    container_name: pm-postgres
    environment:
      POSTGRES_DB: ${DB_DATABASE:-project_management}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    image: redis:7-alpine
    container_name: pm-redis
    ports:
      - "6379:6379"
    networks:
      - internal

  meilisearch:
    image: getmeili/meilisearch:v1.7
    container_name: pm-meilisearch
    environment:
      MEILI_ENV: development
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-changeme}
    ports:
      - "7700:7700"
    volumes:
      - meili_data:/meili_data
    networks:
      - internal

  minio:
    image: quay.io/minio/minio:latest
    container_name: pm-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - internal

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: pm-mailhog
    ports:
      - "8025:8025"
    networks:
      - internal

volumes:
  db_data:
  composer_cache:
  meili_data:
  minio_data:

networks:
  internal:
    driver: bridge
